{"version":3,"sources":["components/GamePiece/GamePiece.js","components/Nav/Nav.js","App.js","index.js"],"names":["GamePiece","props","react_default","a","createElement","lib","s","m","l","onClick","clickHandler","icon","iconName","className","correct","index_es","Nav","window","clearTimeout","this","timeout","gameWon","message","clear","arguments","length","undefined","setTimeout","renderMessage","key","Math","random","score","highScore","Component","App","state","icons","faEyeDropper","faEgg","faAirFreshener","faHorseHead","faAnchor","faIdCard","faAngleLeft","faAddressBook","faIdBadge","faHockeyPuck","faHorse","faAddressCard","sort","_this","randomize","clicked","b","indexOf","concat","Object","toConsumableArray","setState","max","_this2","components_Nav_Nav","map","components_GamePiece_GamePiece","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.07818551.chunk.js","sourcesContent":["import React from 'react'\nimport { Col, CardPanel } from 'react-materialize';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './GamePiece.css'\n\nconst GamePiece = props => (\n    <Col s={12} m={4} l={3}>\n        <CardPanel onClick={() => props.clickHandler(props.icon.iconName)} className={\"hoverable teal lighten-4 black-text center\" + (props.correct === false ? \" shake\" : \"\")}>\n            <FontAwesomeIcon icon={props.icon} />\n        </CardPanel>\n    </Col>\n)\n\nexport default GamePiece\n","import React, { Component } from 'react'\nimport './Nav.css'\n\nclass Nav extends Component {\n    componentWillUnmount() {\n        window.clearTimeout(this.timeout)\n    }\n\n    renderMessage(correct, gameWon, clear = false) {\n        let message, className\n        if(clear) {\n            className = ''\n        }\n        else if (correct === undefined) {\n            message = 'Click your first icon to begin!'\n            className = ''\n        } else {\n            message = gameWon ? 'You Won!!!' : (correct ? 'You guessed correctly!' : 'You guessed incorrectly')\n            className = correct ? 'correct' : 'incorrect'\n        }\n\n        window.clearTimeout(this.timeout)\n        if (!clear & correct !== undefined) {\n            this.timeout = window.setTimeout(this.renderMessage, gameWon ? 3000 : 1000, gameWon ? undefined : correct, false, true)\n        }\n        return <li key={Math.random()} className={className}>{message}</li>\n    }\n\n    render() {\n        return (\n            <nav className=\"pinned\">\n                <div>\n                    <ul className=\"center navList\">\n                        <li className=\"logo\">Click Clack</li>\n                        {this.renderMessage(this.props.correct, this.props.gameWon)}\n                        <li>Score: {this.props.score} | High Score: {this.props.highScore}</li>\n                    </ul>\n                </div>\n            </nav>\n\n        )\n    }\n}\n\nexport default Nav","import React, { Component } from 'react';\nimport { Row, CardPanel, Col } from 'react-materialize';\nimport GamePiece from './components/GamePiece';\nimport Nav from './components/Nav/Nav';\nimport \"./App.css\";\n\n//FontAwesome\n\nimport { faEyeDropper, faEgg, faAirFreshener, faAnchor, faAngleLeft, faAddressBook, faAddressCard, faIdBadge, faIdCard, faHockeyPuck, faHorse, faHorseHead } from '@fortawesome/free-solid-svg-icons';\n\n\nclass App extends Component {\n    state = {\n        icons: [faEyeDropper, faEgg, faAirFreshener, faHorseHead, faAnchor,faIdCard, faAngleLeft, faAddressBook, faIdBadge, faHockeyPuck, faHorse, faAddressCard].sort(this.randomize),\n        clicked: [],\n        score: 0,\n        highScore: 0,\n        correct: undefined,\n        gameWon: false\n    }\n\n    randomize = (a, b) => Math.random() > .5 ? -1 : 1\n\n    clickHandler = iconName => {\n        if (this.state.clicked.indexOf(iconName) === -1) {\n            let score = this.state.clicked.length + 1,\n                clicked = score === this.state.icons.length ? [] : [...this.state.clicked, iconName]\n\n            this.setState({\n                icons: this.state.icons.sort(this.randomize),\n                clicked: clicked,\n                score: score,\n                highScore: Math.max(this.state.highScore, score),\n                correct: true,\n                gameWon: score === this.state.icons.length\n            })\n        } else {\n            this.setState({\n                icons: this.state.icons.sort(this.randomize),\n                clicked: [],\n                score: 0,\n                correct: false,\n                gameWon: false\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container-fluid\">\n                    <Nav correct={this.state.correct} gameWon={this.state.gameWon} score={this.state.score} highScore={this.state.highScore} />\n                    <Row>\n                        <Col s={12}>\n                            <CardPanel className=\"the\">\n                                <b><p>Click on an image to earn points, but don't click on any more than once!</p></b>\n                            </CardPanel>\n                        </Col>\n                    </Row>\n                </div>\n                <div className=\"container\">\n                    <Row>\n                        {this.state.icons.map(icon => <GamePiece correct={this.state.correct} key={icon.iconName} icon={icon} clickHandler={this.clickHandler} />)}\n                    </Row>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}